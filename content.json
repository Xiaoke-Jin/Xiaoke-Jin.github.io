{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"test","slug":"test","date":"2021-07-29T13:26:00.000Z","updated":"2021-07-29T13:26:45.553Z","comments":true,"path":"2021/07/29/test/","link":"","permalink":"http://example.com/2021/07/29/test/","excerpt":"","text":"123456#include &lt;bits/stdc++.h&gt;using namespace std;int main()&#123; return 0;&#125;","categories":[],"tags":[]},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2021-07-29T02:44:12.000Z","updated":"2021-07-29T06:31:27.716Z","comments":true,"path":"2021/07/29/我的第一篇博客文章/","link":"","permalink":"http://example.com/2021/07/29/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"","text":"数学约数 P1734 最大约数和求1到n的所有数的约数和(不包括其本身) 1234567void prime()&#123; // 1~n所有数的约数和(不包括其本身) int n, a[1000]; for (int i = 1; i &lt;= n / 2; i++) //循环每个数（小优化：因为i*j&lt;=n j&gt;=2 所以i&lt;=n/2） for (int j = 2; i * j &lt;= n; j++) //循环倍数（排除本身，从2开始） a[i * j] += i; //目标数加上约数;&#125; 质数","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-07-29T02:34:23.312Z","updated":"2021-07-29T02:34:23.313Z","comments":true,"path":"2021/07/29/hello-world/","link":"","permalink":"http://example.com/2021/07/29/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}